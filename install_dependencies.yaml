# vim: ft=yaml.ansible
# @TODO 
# [ ] os agnostic
# [ ] install nvim dependencies from :checkhealt
# [ ] install translate-shell https://git.io/trans
# [ ] setup sshd
---
- hosts: localhost
  connection: local

  tasks:
    - name: "Full system upgrade `pacman -Suy`"
      become: true
      pacman:
        update_cache: yes
        upgrade: yes

    - name: "Install packages from official repository"
      become: true
      pacman:
        name:
          - base-devel # arch stuff
          - git
          - sudo
          - exa # ls alternative
          - fd # find alternative
          - git-delta # diff syntax-highlighting
          - htop # top alternative
          - lxsession # GUI for polkit privilage escalation
          - man-db # utility for man pages
          - npm # yarn alternative
          - openssh # sshd server/deamon
          - polkit # privilage escalation
          - reflector # pacman source list generator
          - ripgrep-all # grep alternative with ag speed
          - rsync # copy, archive, sync, backup files over file system, ssh, ftp...
          - stow # dot files symlink helper
          - the_silver_searcher # grep alternative
          - tig # git tree viewer
          - tmux
          - vim # VI improved
          - neovim # VIM improved
          - xclip # system clipboard
          - yarn # npm alternative
          - translate-shell # command-line translator (trans)
          - zsh # best shell ever, ZSH FTW!!!
          - starship # zsh prompt
          - python-black # code formatter for python
          - shftm # code formatter for shell scripts

    # To check if any package is installed use when in another task.
    # when: "'yay' in ansible_facts.packages"
    - name: "Gather the packager facts"
      package_facts:
        manager: auto

    - name: "Clone YAY"
      when: 
        - ansible_facts['distribution'] == 'Archlinux'
        # when it is not in packages @TODO fix it üêõ
        - "'yay' in ansible_facts.packages"
      git:
        repo:  https://aur.archlinux.org/yay-bin.git
        dest: /tmp/yay-bin/
        version: master
        clone: yes
        force: yes
        update: yes

    - name: "Install YAY"
      when: 
        - ansible_facts['distribution'] == 'Archlinux'
        # when it is not in packages @TODO fix it üêõ
        - "'yay' in ansible_facts.packages"
      loop:
        - makepkg -si --noconfirm
        - yay -Y --gendb --noconfirm
        - yay -Syu --devel --noconfirm
        - yay -Y --devel --save --noconfirm
      command:
        chdir: /tmp/yay-bin/
        cmd: "{{ item }}"

    - name: Install package from AUR using a Pacman compatible AUR helper
      community.general.pacman:
        name: 
          - nerd-fonts-complete-starship # starship is prompt for zsh
          - stylua-bin # code formatter for lua
          - nvim-packer-git
        state: present
        executable: yay

    - name: "Clone or update git repo with dot files"
      git:
        repo: https://github.com/undg/.dot
        dest: ~/.dot
        version: master
        clone: yes
        update: yes
        force: yes

    - name: "Install dot files with stow"
      command:
        chdir: ~/.dot/
        cmd: ./install
      register: myoutput
      changed_when: myoutput.rc != 0

    # - name: "Nvim: Post install Plug and CoC"
    #   command:
    #     cmd: nvim +PlugInstall +qall --headless
    #     # You can also use the following command (with packer bootstrapped) to have packer setup your configuration (or simply run updates) and close once all operations are completed:
    #     # cmd: nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'
    #   register: myoutput
    #   changed_when: myoutput.rc != 0

